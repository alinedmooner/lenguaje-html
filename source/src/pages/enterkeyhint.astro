---
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Atributo enterkeyhint</title>
  </head>
  <body>
    <h1>enterkeyhint</h1>
    <p>Este atributo permite a los controles de formulario, como los elementos textarea o input, así como los elementos con la propiedad contenteditable, especificar cómo se debe etiquetar la tecla <b>enter</b> o qué icono se debe mostrar en el teclado virtual. Al proporcionar el atributo enterkeyhint, se puede indicar al usuario qué acción se realizará al presionar la tecla enter en el campo específico.</p>
    <p>Esta funcionalidad permite mejorar la experiencia del usuario al proporcionar una indicación clara sobre la acción que se realizará al presionar la tecla enter, lo que puede variar según el contexto y el tipo de control utilizado en el formulario.</p>
    <ul>
      <li><p><b>enter</b> por lo general, se inserta una nueva línea.</p></li>
      <li><p><b>done</b> por lo general, significa que no hay nada más que ingresar y el editor de métodos de entrada (IME) se cerrará.</p></li>
      <li><p><b>go</b> suele significar llevar al usuario al destino del texto que escribió.</p></li>
      <li><p><b>next</b> por lo general, lleva al usuario al siguiente campo que aceptará texto.</p></li>
      <li><p><b>previous</b> por lo general, lleva al usuario al campo anterior que aceptará texto.</p></li>
      <li><p><b>search</b> por lo general, lleva al usuario a los resultados de la búsqueda del texto que ha escrito.</p></li>
      <li><p><b>send</b> por lo general, entrega el texto a su destino.</p></li>
    </ul>

  </body>
</html>
<style>
	@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700;900&display=swap');

	:root {
		--background: #001f3f;
		--text: #f8f9fa;
		--heading: #ffd700;
		--hover: #FF731D;
		--foreground: #3B185F;
		--foreground-2: #800020;
		--foreground-3: #03001C;
	}

	h1 {
		color: var(--heading);
		font-family: 'Roboto', sans-serif;
		font-weight: 900;
		text-align: center;
	}

	p {
		color: var(--text);
		font-family: 'Roboto', sans-serif;
	}

  li {
    color: var(--text);
  }

  b { 
    color: var(--hover);
  }

	html {
		--s: 30px; /* control the size */
		--c1: var(--background);
		--c2: var(--foreground-3);
		
		--_s:37.5% 12.5% at 62.5%;
		--_g:34% 99%,#0000 101%;
		--g1:radial-gradient(var(--_s) 100%,#0000 32%,var(--c1) var(--_g));
		--g2:radial-gradient(var(--_s) 0   ,#0000 32%,var(--c1) var(--_g));
		--g3:radial-gradient(var(--_s) 100%,#0000 32%,var(--c2) var(--_g));
		--g4:radial-gradient(var(--_s) 0   ,#0000 32%,var(--c2) var(--_g));
		background:
			var(--g1),
			var(--g2) 0                calc(3*var(--s)),
			var(--g3) var(--s)         calc(3*var(--s)),
			var(--g4) var(--s)         calc(6*var(--s)),
			var(--g1) calc(2*var(--s)) calc(6*var(--s)),
			var(--g2) calc(2*var(--s)) calc(9*var(--s)),
			var(--g3) calc(3*var(--s)) calc(9*var(--s)),
			var(--g4) calc(3*var(--s)) 0,
			repeating-linear-gradient(var(--c1) 0 25%,var(--c2) 0 50%);
		background-size: calc(4*var(--s)) calc(12*var(--s));
		display: flex;
		justify-content: center;
		align-items: center;
		flex-direction: column;
	}
</style>