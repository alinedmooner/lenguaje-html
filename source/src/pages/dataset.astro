---
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Atributo dataset</title>
  </head>
  <body>
    <h1>dataset</h1>
		<p>Los atributos globales data-* en HTML5 permiten el intercambio de información personalizada entre el HTML y su representación en el DOM mediante secuencias de comandos.</p>
		<p>Estos atributos personalizados son especialmente útiles cuando es necesario almacenar información adicional específica de la aplicación en elementos HTML sin recurrir a soluciones más complicadas. Al aprovechar los atributos data-*, puedes enriquecer la funcionalidad y la interacción de tus elementos HTML de una manera más sencilla y estructurada.</p>
		<p>Sin embargo, hay algunos aspectos a considerar al utilizar atributos de datos. No es recomendable almacenar contenido que deba ser visible y accesible exclusivamente en atributos de datos, ya que las tecnologías de asistencia pueden no acceder a ellos. Además, los rastreadores de búsqueda no pueden indexar los valores de los atributos de datos, por lo que no deberías confiar en ellos para almacenar información crítica para SEO.</p>
		<h2>Javascript</h2>
		<p>Estos atributos personalizados están disponibles a través de la interfaz HTMLElement del elemento en el que se establece el atributo. La propiedad <code>HTMLElement.dataset</code> proporciona acceso a estos atributos. El asterisco (*) en data-* puede ser reemplazado por cualquier nombre siguiendo la regla de producción de nombres XML, con las siguientes restricciones:</p>
		<ul>
			<li><p>El nombre no debe comenzar con "xml" (sin importar las mayúsculas y minúsculas).</p></li>
			<li><p>El nombre no debe contener el carácter de dos puntos (:).</p></li>
			<li><p>El nombre no debe contener letras mayúsculas.</p></li>
		</ul>
		<h2>CSS</h2>
		<p>Además, los atributos de datos también pueden ser accedidos desde CSS, ya que son atributos HTML simples. Por ejemplo, puedes utilizar la función <code>attr()</code> en CSS para mostrar los valores de los atributos de datos. Esto es útil para generar contenido dinámico en CSS.</p>
  </body>
</html>

<style>
	@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700;900&display=swap');

	:root {
		--background: #001f3f;
		--text: #f8f9fa;
		--heading: #ffd700;
		--hover: #FF731D;
		--foreground: #3B185F;
		--foreground-2: #800020;
		--foreground-3: #03001C;
	}

	h1 {
		color: var(--heading);
		font-family: 'Roboto', sans-serif;
		font-weight: 900;
		text-align: center;
	}

	h2 {
			color: var(--heading);
			font-family: 'Roboto', sans-serif;
			font-weight: 700;
			text-align: left;
		}

	p {
		color: var(--text);
		font-family: 'Roboto', sans-serif;
	}

	li {
		color: var(--text);
	}

	html {
		--s: 30px; /* control the size */
		--c1: var(--background);
		--c2: var(--foreground-3);
		
		--_s:37.5% 12.5% at 62.5%;
		--_g:34% 99%,#0000 101%;
		--g1:radial-gradient(var(--_s) 100%,#0000 32%,var(--c1) var(--_g));
		--g2:radial-gradient(var(--_s) 0   ,#0000 32%,var(--c1) var(--_g));
		--g3:radial-gradient(var(--_s) 100%,#0000 32%,var(--c2) var(--_g));
		--g4:radial-gradient(var(--_s) 0   ,#0000 32%,var(--c2) var(--_g));
		background:
			var(--g1),
			var(--g2) 0                calc(3*var(--s)),
			var(--g3) var(--s)         calc(3*var(--s)),
			var(--g4) var(--s)         calc(6*var(--s)),
			var(--g1) calc(2*var(--s)) calc(6*var(--s)),
			var(--g2) calc(2*var(--s)) calc(9*var(--s)),
			var(--g3) calc(3*var(--s)) calc(9*var(--s)),
			var(--g4) calc(3*var(--s)) 0,
			repeating-linear-gradient(var(--c1) 0 25%,var(--c2) 0 50%);
		background-size: calc(4*var(--s)) calc(12*var(--s));
		display: flex;
		justify-content: center;
		align-items: center;
		flex-direction: column;
	}
</style>