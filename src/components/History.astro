---
import "../styles/global.css";
---

<section>
  <p>
    HTML has a rich history that began with its creation in the early 1990s and
    continued to evolve throughout the following decade. Let's take a journey
    through the history of HTML from its inception to the year 2000:
  </p>

  <h2>Creation of HTML 1990</h2>

  <p>
    HTML was conceived by Sir Tim Berners-Lee, a British computer scientist, in
    1990 while working at CERN (European Organization for Nuclear Research). He
    developed HTML as a way to share and structure scientific information among
    researchers. The first version, HTML 1.0, was a simple markup language with
    limited capabilities.
  </p>

  <h2>HTML 2.0 1995</h2>

  <p>
    HTML 2.0, released in 1995, introduced several important features, including
    support for tables and image embedding. This version standardized the basic
    elements and structure of web pages, paving the way for more complex
    layouts.
  </p>

  <h2>HTML 3.2 1997</h2>

  <p>
    HTML 3.2 was a significant milestone in HTML's history. It introduced
    support for advanced features like frames, which enabled the division of a
    web page into multiple sections. Additionally, this version brought enhanced
    form controls, allowing user input and interactivity.
  </p>

  <h2>Emergence of Web Browsers</h2>

  <p>
    During the 1990s, various web browsers emerged, each adding their own
    extensions and features to HTML. Browsers such as Mosaic, Netscape
    Navigator, and Internet Explorer played a crucial role in popularizing the
    World Wide Web and driving HTML's adoption.
  </p>

  <h2>HTML 4.0 and 4.01 1997-1999</h2>
  <p>
    HTML 4.0, released in 1997, introduced numerous new features and elements to
    enhance web page design and interactivity. It included support for style
    sheets, allowing developers to control the presentation of their web pages.
    HTML 4.0 also introduced support for scripting languages like JavaScript.
  </p>

  <h2>W3C Standardization</h2>
  <p>
    The World Wide Web Consortium W3C played a pivotal role in HTML's
    standardization. The W3C, led by Tim Berners-Lee, worked to develop and
    maintain HTML specifications, ensuring interoperability among browsers and
    consistency in web development practices.
  </p>

  <h2>HTML 4.01 Transitional and Strict</h2>
  <p>
    HTML 4.01, released in 1999, had two versions: Transitional and Strict.
    Transitional allowed the use of older HTML elements and deprecated features,
    while Strict encouraged adherence to a cleaner, more standardized version of
    HTML. This version also introduced support for cascading style sheets (CSS)
    for enhanced visual control.
  </p>

  <h2>Web Accessibility and HTML</h2>
  <p>
    During this period, the importance of web accessibility grew. Developers and
    organizations began focusing on creating HTML content that could be easily
    accessed by individuals with disabilities, leading to guidelines and
    standards for accessible web design.
  </p>

  <p>
    By the year 2000, HTML had become a fundamental technology for creating web
    pages. Its evolution from a basic markup language to a more robust and
    feature-rich standard paved the way for the modern web development
    landscape.
  </p>

  <h2>HTML4</h2>
  <p>
    At the beginning of the 2000s, HTML4 was the dominant version of HTML. It
    introduced several important features like framesets, tables for layout, and
    form validation using JavaScript. Many websites relied on tables to create
    complex layouts, which often resulted in code that was difficult to maintain
    and less accessible for users with disabilities
  </p>

  <h2>XHTML 2000</h2>
  <p>
    XHTML, or Extensible HyperText Markup Language, was introduced as a
    reformulation of HTML4, but it adhered to the stricter rules of XML. XHTML
    was an attempt to make HTML more standardized and compatible with other
    technologies like XML and CSS. XHTML used an XML syntax and enforced
    well-formedness rules, which required closing tags, lowercase element names,
    and attribute values in double quotes.
  </p>

  <h2>Web Standards and Accessibility</h2>
  <p>
    During this period, there was a growing emphasis on web standards and
    accessibility. The Web Standards Project WaSP and organizations like the
    World Wide Web Consortium W3C advocated for using valid HTML, separating
    structure from presentation using CSS, and making websites accessible to
    people with disabilities.
  </p>

  <h2>HTML5 Emerges 2004</h2>
  <p>
    In 2004, the W3C formed the HTML Working Group to develop the next major
    version of HTML. HTML5 aimed to address the limitations of previous versions
    and provide enhanced support for multimedia, graphics, and interactive
    elements. It introduced new semantic elements such as header, nav, section,
    and article, making it easier to structure web content.
  </p>

  <h2>Introduction of CSS3</h2>
  <p>
    Alongside HTML5, CSS3 also gained momentum during this period. CSS3
    introduced new features like rounded corners, gradients, shadows, and
    animations. This allowed developers to create visually appealing designs
    without relying heavily on images or complex JavaScript.
  </p>

  <h2>Rich Internet Applications</h2>
  <p>
    The early 2000s saw the rise of RIAs, which provided more interactive and
    responsive web applications. Technologies like Adobe Flash and Microsoft
    Silverlight gained popularity for creating multimedia-rich web experiences.
    However, their dominance started to decline towards the end of the decade
    with the emergence of HTML5 and JavaScript frameworks.
  </p>

  <h2>Mobile Web and Responsive Design</h2>
  <p>
    As mobile devices became increasingly popular, web developers had to adapt
    to the challenges of designing for different screen sizes and resolutions.
    Responsive design principles started to gain traction, which involved
    creating flexible layouts and media queries to adjust the presentation based
    on the device's characteristics.
  </p>

  <h2>JavaScript Frameworks and Libraries</h2>
  <p>
    JavaScript became a powerful language for client-side scripting during this
    period. JavaScript frameworks and libraries like jQuery, Prototype, and Dojo
    provided abstractions and simplified DOM manipulation, making it easier to
    develop interactive and dynamic web applications.
  </p>

  <h2>Browser Wars and Compatibility Issues</h2>
  <p>
    Throughout this decade, web developers faced challenges with cross-browser
    compatibility. Internet Explorer, Firefox, Safari, and Chrome were the major
    players, each implementing HTML, CSS, and JavaScript differently. Developers
    had to invest considerable effort in testing and writing browser-specific
    code to ensure consistent experiences across different browsers.
  </p>

  <p>
    These were some of the significant developments in the history of HTML. This
    period witnessed a shift towards standards-based web development, the
    emergence of HTML5 and CSS3, the rise of mobile web, and the growing
    importance of accessibility and user experience. These advancements laid the
    foundation for the modern web development practices we see today.
  </p>

  <h2>HTML5 Becomes the Standard</h2>
  <p>
    HTML5 emerged as the new standard for web development during this period. It
    introduced a range of powerful features and improvements that transformed
    the way websites and web applications were built. HTML5 provided native
    support for multimedia elements such as audio and video, eliminating the
    need for third-party plugins like Flash. It also introduced new semantic
    elements like header, nav, section, and article, enabling developers to
    create well-structured, accessible content.
  </p>

  <h2>Canvas and WebGL for Rich Graphics</h2>
  <p>
    The canvas element, introduced in HTML5, enabled developers to create
    dynamic graphics and animations directly within the browser using
    JavaScript. This opened up opportunities for creating interactive games,
    data visualizations, and multimedia experiences without relying on external
    plugins. Additionally, WebGL, a JavaScript API based on OpenGL, allowed for
    the rendering of high-performance 3D graphics within the browser, further
    enhancing the possibilities for immersive web experiences.
  </p>

  <h2>Responsive Web Design and Mobile Optimization</h2>
  <p>
    With the exponential rise of mobile devices, responsive web design gained
    immense importance. Ethan Marcotte coined the term "responsive web design"
    in 2010, advocating for fluid grid layouts, flexible images, and media
    queries. This approach enabled websites to automatically adapt and provide
    optimal user experiences across different devices and screen sizes. Web
    developers focused on optimizing websites for mobile devices, employing
    techniques like touch-friendly interfaces, mobile-first design, and
    performance optimization for improved mobile experiences.
  </p>

  <h2>Web Accessibility Standards</h2>
  <p>
    Web accessibility gained significant attention during this period. The Web
    Content Accessibility Guidelines WCAG 2.0 became widely adopted, emphasizing
    the importance of creating accessible web content for people with
    disabilities. Developers began incorporating accessibility considerations
    into their design and development processes, ensuring that websites were
    perceivable, operable, understandable, and robust for all users.
  </p>

  <h2>Continued Evolution of CSS</h2>
  <p>
    Cascading Style Sheets (CSS) underwent notable advancements during this
    period. CSS3, the latest version of CSS, introduced new modules and
    properties that allowed developers to create sophisticated designs and
    animations. CSS3 introduced features like rounded corners, gradients,
    shadows, transitions, and transforms, reducing the reliance on images and
    JavaScript for visual effects.
  </p>

  <h2>JavaScript Frameworks and Libraries</h2>
  <p>
    JavaScript frameworks and libraries gained significant popularity between
    2010 and 2020. Frameworks like AngularJS, React, and Vue.js provided
    developers with robust tools for building complex, interactive web
    applications. These frameworks embraced concepts like component-based
    architecture, virtual DOM, and data binding, making it easier to manage
    state and create dynamic user interfaces.
  </p>

  <h2>Evolution of Browser Support</h2>
  <p>
    Browser vendors competed to improve HTML5 support and performance. Google
    Chrome, Mozilla Firefox, Apple Safari, and Microsoft Edge formerly Internet
    Explorer engaged in a "browser wars" that led to rapid advancements in HTML,
    CSS, and JavaScript capabilities. This competition drove the adoption of new
    web technologies, enabling developers to build more feature-rich and
    cross-browser compatible applications.
  </p>

  <h2>Progressive Web Apps PWAs</h2>
  <p>
    PWAs gained prominence during this period, combining the best aspects of web
    and native applications. PWAs leveraged modern web technologies like service
    workers, web app manifests, and push notifications to offer offline
    capabilities, app-like experiences, and seamless installation on users'
    devices. PWAs blurred the lines between web and native apps, providing a
    superior user experience and allowing websites to function as standalone
    applications.
  </p>

  <h2>Web Standards and Open Source Collaboration</h2>
  <p>
    The web development community increasingly embraced open source
    collaboration and web standards. Initiatives like the World Wide Web
    Consortium W3C, Mozilla Developer Network MDN, and GitHub provided platforms
    for developers to collaborate, share knowledge, and contribute to the
    development of HTML and related technologies.
  </p>

  <p>
    HTML5 became the standard, enabling rich multimedia experiences, responsive
    design, and improved semantics. The period saw significant advancements in
    CSS, the rise of JavaScript frameworks, a strong focus on web accessibility,
    and the emergence of progressive web apps. These developments laid the
    foundation for the modern web development practices we see today.
  </p>
</section>
